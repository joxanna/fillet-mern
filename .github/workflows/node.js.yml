# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
    # paths:
    #   - 'backend/**'  # Trigger workflow when files inside the backend folder are changed
  pull_request:
    branches: [ "main" ]
    # paths:
    #   - 'backend/**'  # Trigger workflow when files inside the backend folder are changed

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        mongodb-version: ['6.0', '7.0', '8.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Node.js environment globally for the job
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    # Cache npm dependencies
    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Generate .env file from GitHub secrets
    - name: Generate .env file
      run: |
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
        echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV

    - name: MongoDB in GitHub Actions
      uses: supercharge/mongodb-github-action@1.11.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}


    # Install backend dependencies
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    # # Run build if there's a build script defined
    # - name: Build the backend project (if applicable)
    #   run: |
    #     cd backend
    #     npm run start --if-present

    # Run tests within the backend directory
    - name: Run tests for backend
      run: |
        cd backend
        npm run test
      env:
        MONGO_URI: mongodb://localhost:27017/test  # Mongo URI for your local MongoDB instance
        PORT: 3000

    - name: Debugging - Check node version and npm versions
      run: |
        cd backend
        node -v
        npm -v
        npm ls backend
